@startuml
class a3.Controllers.LoginController {
- Button home_btn
- Button login_btn
- TextField password_txt
- Button register_btn
- TextField username_txt
- RadioButton patient_radio_btn
- RadioButton optician_radio_btn
- ImageView logoImageView
- Button close_btn
~ Connection connection
~ PreparedStatement pst
~ ResultSet rs
+ void initialize(URL,ResourceBundle)
+ void loginVerification(ActionEvent)
+ void openHomeWindow(ActionEvent)
+ void openRegisterWindow(ActionEvent)
+ void close(ActionEvent)
}
class a3.Controllers.PatientDashboardController {
- TableColumn<Appointment,String> col_date
- TableColumn<Appointment,String> col_id
- TableColumn<Appointment,String> col_optician
- TableColumn<Appointment,String> col_patient
- TableColumn<Appointment,String> col_service
- TableColumn<Appointment,String> col_status
- TableColumn<Appointment,String> col_time
- Label fullname_label
- Label id_label
- TableView<Appointment> table_appointments
- Button terminate_btn
- TextField time_txt
- ImageView logoImageView
- Button logout_btn
- TextField service_txt
- DatePicker date_picker
- Button book_btn
- Button close_btn
- TextField appointmentid_txt
- TextField status_txt
~ Connection connection
~ int index
~ String patientId
~ String defaultStatus
+ void initialize(URL,ResourceBundle)
+ void retrievePatientInfo(String,String,String,String,int,String,String,String)
+ String randomOptician()
+ String generateAppointmentID()
+ void bookAppointment(ActionEvent)
+ void getSelectedAppointment(MouseEvent)
+ void terminateTreatment(ActionEvent)
+ void close(ActionEvent)
+ void logOut(ActionEvent)
+ void load()
}
class a3.Controllers.HomeController {
- Button close_btn
- Button login_btn
- Button registerNow_Btn
- ImageView logoImageView
+ void initialize(URL,ResourceBundle)
+ void openRegisterWindow(ActionEvent)
+ void openLoginWindow(ActionEvent)
+ void closeWindow(ActionEvent)
}
class a3.Controllers.OpticianDashboardController {
- TextField appointment_id
- Button close_btn
- TableColumn<Appointment,String> col_date
- TableColumn<Appointment,String> col_id
- TableColumn<Appointment,String> col_optician
- TableColumn<Appointment,String> col_patient
- TableColumn<Appointment,String> col_service
- TableColumn<Appointment,String> col_status
- TableColumn<Appointment,String> col_time
- ImageView logoImageView
- Button logout_btn
- Label optician_id
- Label optician_name
- TextField status_txt
- TableView<Appointment> table_appointments
- Button terminate_btn
- ComboBox<String> update_options
- TextField updated_status
~ Connection connection
~ PreparedStatement pst
~ ResultSet rs
~ int index
~ String opticianID
+ void initialize(URL,ResourceBundle)
+ void retrieveOpticianInfo(String,String)
+ void getSelectedAppointment(MouseEvent)
+ void terminateTreatment(ActionEvent)
+ void close(ActionEvent)
+ void logOut(ActionEvent)
+ void getUpdateOption(ActionEvent)
+ void update(ActionEvent)
+ void load()
}
class a3.Controllers.RegisterController {
- TextField dob_txt
- TextField fname_txt
- Button home_btn
- TextField lname_txt
- Button login_btn
- TextField mobile_txt
- PasswordField password_txt
- TextField patientid_txt
- Button register_btn
- TextField username_txt
- TextField role_txt
- DatePicker date_picker
- ImageView logoImageView
- Button close_btn
~ Connection connection
~ PreparedStatement pst
+ void initialize(URL,ResourceBundle)
+ void openLoginWindow(ActionEvent)
+ void openHomeWindow(ActionEvent)
+ void registerPatient(ActionEvent)
+ void close(ActionEvent)
}


javafx.fxml.Initializable <|.. a3.Controllers.LoginController
javafx.fxml.Initializable <|.. a3.Controllers.PatientDashboardController
javafx.fxml.Initializable <|.. a3.Controllers.HomeController
javafx.fxml.Initializable <|.. a3.Controllers.OpticianDashboardController
javafx.fxml.Initializable <|.. a3.Controllers.RegisterController
@enduml